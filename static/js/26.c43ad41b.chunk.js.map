{"version":3,"sources":["Components/views/auth/Signup.tsx","Components/Services/helper.ts","config.ts","Components/Services/services.ts"],"names":["Signup","props","useState","email","password","first_name","last_name","phone","isloading","errorMessage","state","setState","validateForm","e","preventDefault","submitForm","Connector","onchange","console","log","target","value","name","className","onSubmit","variant","type","onChange","placeholder","size","id","to","getToken","localStorage","getItem","deleteToken","removeItem","setAdminUtils","data","token","setItem","JSON","stringify","window","location","assign","getAdminUtils","itemkey","item","parse","reloadPage","setTimeout","reload","root","notify","x","toast","axios","create","interceptors","request","use","config","baseURL","headers","error","Promise","reject","response","message","status"],"mappings":"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","file":"static/js/26.c43ad41b.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {  Alert } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { api } from \"../../../config\";\nimport Connector from \"../../Services/services\";\n\nconst Signup = (props) => {\n  const [state, setState] = useState({\n    email: \"\",\n    password: \"\",\n    first_name: \"\",\n    last_name: \"\",\n    phone: \"\",\n    isloading: false,\n    errorMessage: \"\",\n  });\n  const { email, password, first_name, last_name, errorMessage,phone, isloading } =\n    state;\n  const validateForm = (e) => {\n    e.preventDefault();\n    if (!email) {\n      return setState({\n        ...state,\n        errorMessage: \"Email address is required\",\n      });\n    }\n    if (!password) {\n      return setState({\n        ...state,\n        errorMessage: \"Password is required\",\n      });\n    }\n    submitForm();\n  };\n  const submitForm = () => {\n    setState({\n      ...state,\n      isloading: true,\n    });\n    const data = {\n      email,\n      password,\n    };\n    Connector(`/login`)\n  };\n  const onchange = (e) => {\n    console.log(e.target.value);\n    setState({\n      ...state,\n      [e.target.name]: e.target.value,\n      errorMessage: \"\",\n    });\n  };\n  return (\n    <>\n      <div className=\"container-fluid lgwrap signupwrapp\">\n        <div className=\"row justify-center\">\n          <div className=\"col-md-12\">\n            <div className=\"lgwrap30\">\n              <span className=\"xmc\">\n                  MediPharm Assitant\n              </span>\n            </div>\n          </div>\n          <div className=\"col-md-6 loginformbody signup8\">\n            <div className=\"ft3\">Sign up</div>\n            <div className=\"ft12 f_u1 check_12\" >\n              Sign up as a Super Admin and create other accounts\n            </div>\n            <form className=\"form-wrapper\" onSubmit={validateForm}>\n              <div className=\"form-header\">\n                {errorMessage && (\n                  <div className=\"signinalertmssg\">\n                    <Alert variant={\"danger\"}>{errorMessage}</Alert>\n                  </div>\n                )}\n              </div>\n              <div className=\"padded-signin-wrapper\">\n                <div className=\"row inputlabel justify-between\">\n                  <div className=\"col-md-6 rdfrmlbl2\">\n                    <span className=\"rdfrmlbl\"> First Name</span>\n                    <input\n                      type=\"text\"\n                      name=\"first_name\"\n                      value={first_name}\n                      onChange={onchange}\n                      placeholder=\"Enter your First Name\"\n                      size={60}\n                      className=\"form-control forminput\"\n                    />\n                  </div>\n                  <div className=\"col-md-6 rdfrmlbl2right\">\n                    <span className=\"rdfrmlbl\"> Last Name</span>\n                    <input\n                      type=\"text\"\n                      name=\"last_name\"\n                      value={last_name}\n                      onChange={onchange}\n                      placeholder=\"Enter your First Name\"\n                      size={60}\n                      className=\"form-control forminput\"\n                    />\n                  </div>\n                </div>\n                <label className=\"inputlabel\">\n                  <span className=\"rdfrmlbl\">Email Address</span>\n                  <input\n                    type=\"text\"\n                    name=\"email\"\n                    value={email}\n                    onChange={onchange}\n                    placeholder=\"Enter your email\"\n                    size={60}\n                    className=\"form-control forminput\"\n                  />\n                </label>\n                <label className=\"inputlabel\">\n                  <span className=\"rdfrmlbl\">Phone</span>\n                  <input\n                    type=\"text\"\n                    name=\"phone\"\n                    value={phone}\n                    onChange={onchange}\n                    placeholder=\"Enter your phone\"\n                    size={60}\n                    className=\"form-control forminput\"\n                  />\n                </label>\n                <label className=\"inputlabel\">\n                  <span className=\"rdfrmlbl\">Password</span>\n                  <input\n                    type=\"password\"\n                    name=\"password\"\n                    value={password}\n                    onChange={onchange}\n                    placeholder=\"Enter your Password\"\n                    size={60}\n                    className=\"form-control forminput\"\n                  />\n                </label>\n                <div className=\"forgotpassword font-200 text-dark\">\n                  <input\n                    type=\"checkbox\"\n                    name=\"agreement\"\n                    className=\"check_12\"\n                    id=\"\"\n                  />\n                  Creating an account means you’re okay with our Terms of\n                  Service, Privacy Policy, and our default Notification\n                  Settings.\n                </div>\n                <div className=\"form-btn-wrapper loginbtdv\">\n                  <input\n                    className=\"signinbtn\"\n                    type=\"submit\"\n                    onSubmit={validateForm}\n                    value={isloading ? \"Signing up...\" : \"Sign up\"}\n                  />\n                </div>\n                <Link to=\"/login\">\n                  <p className=\"signuprgqt\">Have an account? Login</p>\n                </Link>\n                <p className=\"signuprgqt1\">© Drug Monitoring, 2021</p>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\nexport default Signup;\n","export const getToken = () => localStorage.getItem('auth_token');\nexport const deleteToken = () => localStorage.removeItem('auth_token');\nexport const setTokenUtils = (token) => {\n    localStorage.setItem('auth_token', token)\n}\nexport const setAdminUtils = (data) => {\n    setTokenUtils(data.token)\n    localStorage.setItem('admin_data', JSON.stringify(data))\n    window.location.assign(\"/admin/dashboard\")\n}\n\nexport const getAdminUtils = (itemkey) => {\n    const item = localStorage.getItem(itemkey)\n    const item_ = item ? JSON.parse(item) : \"\"\n    return item_\n}\n\nexport const reloadPage = () => {\n    setTimeout(() => {\n        window.location.reload()\n    }, 2000)\n}","import React from \"react\";\nimport { toast } from \"react-toastify\";\n\nexport const Appcontext: any = React.createContext({\n  state: {},\n  setState: () => { },\n});\n\nexport const api = \"https://stepformbackend.herokuapp.com/\"\nexport const root = `https://medipharm-test.herokuapp.com/api`\n// http://172.105.71.75:8091/api\n\nexport const notify = (x) => {\n  toast(x);\n};","import React, { useEffect } from \"react\";\nimport axios from \"axios\";\nimport { deleteToken, getToken } from \"./helper\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { notify, root } from '../../config';\n\nconst logout = () => {\n  deleteToken();\n  const redirectUrl = window.location.pathname;\n  return (window.location.href = \"/login?redirect=\" + redirectUrl);\n};\n\nconst Connector = axios.create();\n\nConnector.interceptors.request.use(\n  (config) => {\n    config.baseURL = root;\n    console.log(getToken())\n    if(getToken()!==\"undefined\"){\n      config.headers[\"Authorization\"] = getToken()? `Bearer ${getToken()}`:\"\";\n    }\n    config.headers[\"Content-Type\"] = \"application/json\";\n    config.headers[\"Accept\"] = \"application/json\";\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\nConnector.interceptors.response.use(\n  (response) => {\n    console.log(response)\n    return response;\n  },\n  (error) => {\n    console.error('error_status', error.response);\n    notify(error?.response?.data?.message)\n    if (error?.response?.status === 401 || error?.response?.status === 404) {\n      notify(\"Failed to process please try again later\")\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport default Connector;"],"sourceRoot":""}