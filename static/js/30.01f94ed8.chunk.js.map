{"version":3,"sources":["Components/views/Dashboard/AdminDashboard/Dropdown/TableDropdownStaffs.tsx","Components/views/Dashboard/AdminDashboard/Admin_Staffs.tsx","Components/helpers/reusables.ts"],"names":["TableDropdownStaffs","props","React","useState","dropdownPopoverShow","setDropdownPopoverShow","btnDropdownRef","createRef","popoverDropdownRef","console","log","className","ref","onClick","e","preventDefault","createPopper","current","placement","width","height","viewBox","fill","xmlns","id","maskUnits","x","y","d","mask","href","company_info","AdminStaffs","filterby","state","setState","dispatch","useDispatch","stats","useSelector","dashboardStats","all_users","fetchdata","type","a","dashboardActions","getAllStaffs","match","params","useEffect","Staff_Stats_cards","length","clientName","organisationName","placeholder","name","onChange","filter","target","value","to","clientId","organisationId","Table","responsive","striped","scope","map","item","i","firstName","lastName","role","phoneNumber","emailAddress","formatTime","createdAt","moment","require","date","format","formatTime2","dateTime","currentTime"],"mappings":"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","file":"static/js/30.01f94ed8.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\nimport { createPopper } from \"@popperjs/core\";\n\nconst TableDropdownStaffs = (props) => {\n  // dropdown props\n  const [dropdownPopoverShow, setDropdownPopoverShow]: any =\n    React.useState(false);\n\n  const btnDropdownRef: any = React.createRef();\n  const popoverDropdownRef: any = React.createRef();\n  const openDropdownPopover = () => {\n    createPopper(btnDropdownRef.current, popoverDropdownRef.current, {\n      placement: \"left-start\",\n    });\n    setDropdownPopoverShow(true);\n  };\n  const closeDropdownPopover = () => {\n    setDropdownPopoverShow(false);\n  };\n  console.log(dropdownPopoverShow);\n  return (\n    <>\n      <a\n        className=\"text-blueGray-500 py-1 px-3 colreverse\"\n        ref={btnDropdownRef}\n        onClick={(e) => {\n          e.preventDefault();\n          dropdownPopoverShow ? closeDropdownPopover() : openDropdownPopover();\n        }}\n      >\n        <svg\n          width=\"4\"\n          height=\"16\"\n          viewBox=\"0 0 4 16\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <mask\n            id=\"mask0_50_573\"\n            maskUnits=\"userSpaceOnUse\"\n            x=\"0\"\n            y=\"0\"\n            width=\"4\"\n            height=\"16\"\n          >\n            <path\n              fill-rule=\"evenodd\"\n              clip-rule=\"evenodd\"\n              d=\"M2 4C3.1 4 4 3.1 4 2C4 0.9 3.1 0 2 0C0.9 0 0 0.9 0 2C0 3.1 0.9 4 2 4ZM2 6C0.9 6 0 6.9 0 8C0 9.1 0.9 10 2 10C3.1 10 4 9.1 4 8C4 6.9 3.1 6 2 6ZM0 14C0 12.9 0.9 12 2 12C3.1 12 4 12.9 4 14C4 15.1 3.1 16 2 16C0.9 16 0 15.1 0 14Z\"\n              fill=\"white\"\n            />\n          </mask>\n          <g mask=\"url(#mask0_50_573)\">\n            <rect x=\"-10\" y=\"-4\" width=\"24\" height=\"24\" fill=\"#9EA0A5\" />\n          </g>\n        </svg>\n      </a>\n      {dropdownPopoverShow && (\n        <div className=\"reltv\">\n          <div\n            ref={popoverDropdownRef}\n            className={\n              (dropdownPopoverShow ? \"block \" : \"hidden \") +\n              \"bg-white text-base z-50 float-left py-2 list-none text-left rounded shadow-lg min-w-48 colreverse\"\n            }\n          >\n            {/* <span\n              className={\n                \"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\n              }\n            >\n              Edit\n            </span> */}\n            {/* {!props.company_info?.is_confirmed && (\n              <a\n                href=\"#pablo\"\n                className={\n                  \"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\n                }\n              >\n                Confirm\n              </a>\n            )} */}\n\n            {/* {props.company_info?.deleted_at && (\n              <a\n                href=\"#pablo\"\n                className={\n                  \"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\n                }\n              >\n                Restore\n              </a>\n            )} */}\n              {/* <a\n                href={`/admin/staffs/${props?.company_info?.id}/ORGANISATION`}\n                className={\n                  \"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\n                }\n              >\n                View Staffs\n              </a> */}\n              <a\n                href={`/admin/staff/edit/${props?.company_info?.id}`}\n                className={\n                  \"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\n                }\n              >\n               Edit\n              </a>\n\n            {/* <a className={\n              \"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\n            } href={`/admin/business/${props?.eachbusiness?.id}/locations`}>\n            Edit\n        </a> */}\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default TableDropdownStaffs;\n","import React, { useEffect, useState } from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { dashboardActions } from \"../../../../Actions\";\nimport { formatTime } from \"../../../helpers/reusables\";\nimport Staff_Stats_cards from \"./DashboardComponents/Staff_Stats_cards\";\nimport \"./index.css\";\nimport TableDropdownStaffs from './Dropdown/TableDropdownStaffs';\n\nconst AdminStaffs = (props) => {\n  const [state, setState] = useState({ filterby: \"\" });\n  const dispatch = useDispatch();\n  const stats = useSelector(\n    (state: any) => state.dashboardStats.all_users\n    // all_users\n  );\n  const fetchdata = async (type) => {\n    await dispatch(dashboardActions.getAllStaffs(props.match.params.id, type));\n  };\n  useEffect(() => {\n    fetchdata(props?.match?.params?.type);\n  }, [dispatch]);\n  const filter_handler = (filter) => {\n    fetchdata(filter);\n    setState({\n      ...state,\n      filterby: filter,\n    });\n  };\n  console.log(stats);\n  const { filterby } = state;\n  return (\n    <>\n      <div className=\"contaniner-fluid\">\n        <div className=\"row\">\n          {/* <AdminSidebar staff={true} /> */}\n          <div className=\"dashboard_main_area pb-0 row\">\n            <Staff_Stats_cards />\n            <div className=\"col-md-11 expand12\">\n              <div className=\"row jcenter pt-9\">\n                <div className=\"col-md-12 charthome\">\n                  <div className=\"col-md-12 charthome\">\n                    <div className=\"sidebarUpdate1 text-left\">\n                      <span>{stats?.length>0&& stats?.[0]?.clientName} {!stats?.[0]?.clientName && stats?.length>0&& stats?.[0]?.organisationName}  Staffs</span>\n                      <span>\n                        {\" \"}\n                        <input\n                          type=\"text\"\n                          className=\"search_on1 searchz form-control\"\n                          placeholder=\"search\"\n                        />\n                      </span>\n                      <span>\n                        <div className=\"row\">\n                          <select\n                            name=\"filterby\"\n                            className=\"filter1\"\n                            onChange={(e) => filter_handler(e.target.value)}\n                            id=\"\"\n                          >\n                            <option value=\"\">Filter</option>\n                            <option value=\"CLIENT\">CLIENT</option>\n                            <option value=\"ORGANISATION\">ORGANISATION</option>\n                          </select>\n                          <Link to={`/admin/null/staffs/add/${stats?.[0]?.clientId??stats?.[0]?.organisationId}`}>             \n                            <button className=\"addstaff bluebtn\">\n                              + Add staff\n                            </button>\n                          </Link>\n                        </div>\n                      </span>\n                    </div>\n                    <Table className=\"table\" responsive striped>\n                      <thead className=\"\">\n                        <tr>\n                          <th scope=\"col\"> Name</th>\n                          <th scope=\"col\">Designation</th>\n                          <th scope=\"col\">Mobile</th>\n                          <th scope=\"col\">Email</th>\n                          <th scope=\"col\">Date</th>\n                          <th scope=\"col\"> Actions </th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {stats?.length > 0 &&\n                          stats?.map((item, i) => (\n                            <tr key={i}>\n                              <th scope=\"row\" className=\"thd\">\n                                <span className=\"slect3\">\n                                  <input\n                                    type=\"checkbox\"\n                                    name=\"selectstaff\"\n                                    id=\"\"\n                                  />\n                                </span>{\" \"}\n                                <td>\n                                  {item?.firstName}\n                                  {item?.lastName}\n                                </td>\n                              </th>\n                              <td>{item?.role}</td>\n                              <td>\n                                <span className=\"\">{item?.phoneNumber}</span>\n                              </td>\n                              <td>\n                                <span className=\"\">{item?.emailAddress}</span>\n                                <span className=\"notif1\"></span>\n                              </td>\n                              <td>\n                                <span className=\"\">\n                                  {formatTime(item?.createdAt)}\n                                </span>\n                                <span className=\"notif1\"></span>\n                              </td>\n                              <td>\n                                <TableDropdownStaffs company_info={item}/>\n                              </td>\n                            </tr>\n                          ))}\n                      </tbody>\n                    </Table>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\nexport default AdminStaffs;\n","const moment = require(\"moment\");\n\n\n\nexport const formatTime = (date) => {\n  if (date) {\n    const dateTime = moment(date).format(\"Do MMM YYYY\");\n    return dateTime;\n  } else {\n    return \"\";\n  }\n};\nexport const formatTime2 = (date):any => {\n  if (date) {\n    const dateTime = moment(date).format('YYYY-MM-DD');\n    console.log(dateTime.currentTime)\n    return dateTime;\n  } else {\n    return \"\";\n  }\n};\n"],"sourceRoot":""}