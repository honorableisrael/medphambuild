{"version":3,"sources":["Components/views/Dashboard/AdminDashboard/Dropdown/TableDropdownDrug.tsx","Components/views/Dashboard/AdminDashboard/Admin_Drugs.tsx"],"names":["TableDropdownDrug","props","React","useState","dropdownPopoverShow","setDropdownPopoverShow","btnDropdownRef","createRef","popoverDropdownRef","console","log","className","ref","onClick","e","preventDefault","createPopper","current","placement","width","height","viewBox","fill","xmlns","id","maskUnits","x","y","d","mask","href","company_info","AdminDrugs","stats","dispatch","useDispatch","useSelector","state","dashboardStats","drugslist","useEffect","loadDashboardStats","a","dashboardActions","getAllDrugs","Staff_Stats_cards","type","placeholder","name","value","to","Table","responsive","striped","scope","length","map","item","i","drugName","drugDescription","productId","noInPackage","packageType","totalStocked","totalOutOfStock"],"mappings":"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","file":"static/js/36.843c591a.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\nimport { createPopper } from \"@popperjs/core\";\n\nconst TableDropdownDrug = (props) => {\n  // dropdown props\n  const [dropdownPopoverShow, setDropdownPopoverShow]: any =\n    React.useState(false);\n\n  const btnDropdownRef: any = React.createRef();\n  const popoverDropdownRef: any = React.createRef();\n  const openDropdownPopover = () => {\n    createPopper(btnDropdownRef.current, popoverDropdownRef.current, {\n      placement: \"left-start\",\n    });\n    setDropdownPopoverShow(true);\n  };\n  const closeDropdownPopover = () => {\n    setDropdownPopoverShow(false);\n  };\n  console.log(dropdownPopoverShow);\n  return (\n    <>\n      <a\n        className=\"text-blueGray-500 py-1 px-3 colreverse\"\n        ref={btnDropdownRef}\n        onClick={(e) => {\n          e.preventDefault();\n          dropdownPopoverShow ? closeDropdownPopover() : openDropdownPopover();\n        }}\n      >\n        <svg\n          width=\"4\"\n          height=\"16\"\n          viewBox=\"0 0 4 16\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <mask\n            id=\"mask0_50_573\"\n            maskUnits=\"userSpaceOnUse\"\n            x=\"0\"\n            y=\"0\"\n            width=\"4\"\n            height=\"16\"\n          >\n            <path\n              fill-rule=\"evenodd\"\n              clip-rule=\"evenodd\"\n              d=\"M2 4C3.1 4 4 3.1 4 2C4 0.9 3.1 0 2 0C0.9 0 0 0.9 0 2C0 3.1 0.9 4 2 4ZM2 6C0.9 6 0 6.9 0 8C0 9.1 0.9 10 2 10C3.1 10 4 9.1 4 8C4 6.9 3.1 6 2 6ZM0 14C0 12.9 0.9 12 2 12C3.1 12 4 12.9 4 14C4 15.1 3.1 16 2 16C0.9 16 0 15.1 0 14Z\"\n              fill=\"white\"\n            />\n          </mask>\n          <g mask=\"url(#mask0_50_573)\">\n            <rect x=\"-10\" y=\"-4\" width=\"24\" height=\"24\" fill=\"#9EA0A5\" />\n          </g>\n        </svg>\n      </a>\n      {dropdownPopoverShow && (\n        <div className=\"reltv\">\n          <div\n            ref={popoverDropdownRef}\n            className={\n              (dropdownPopoverShow ? \"block \" : \"hidden \") +\n              \"bg-white text-base z-50 float-left py-2 list-none text-left rounded shadow-lg min-w-48 colreverse\"\n            }\n          >\n            {/* <span\n              className={\n                \"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\n              }\n            >\n              Edit\n            </span> */}\n            {/* {!props.company_info?.is_confirmed && (\n              <a\n                href=\"#pablo\"\n                className={\n                  \"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\n                }\n              >\n                Confirm\n              </a>\n            )} */}\n\n            {/* {props.company_info?.deleted_at && (\n              <a\n                href=\"#pablo\"\n                className={\n                  \"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\n                }\n              >\n                Restore\n              </a>\n            )} */}\n              {/* <a\n                href={`/admin/staffs/${props?.company_info?.id}/ORGANISATION`}\n                className={\n                  \"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\n                }\n              >\n                View Staffs\n              </a> */}\n              <a\n                href={`/admin/drugs/edit/${props?.company_info?.id}`}\n                className={\n                  \"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\n                }\n              >\n               Edit\n              </a>\n\n            {/* <a className={\n              \"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\n            } href={`/admin/business/${props?.eachbusiness?.id}/locations`}>\n            Edit\n        </a> */}\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default TableDropdownDrug;\n","import React, { useEffect } from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport Staff_Stats_cards from \"./DashboardComponents/Staff_Stats_cards\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"./index.css\";\nimport { dashboardActions } from \"../../../../Actions\";\nimport TableDropdownDrug from './Dropdown/TableDropdownDrug';\n\nconst AdminDrugs = () => {\n  const dispatch = useDispatch();\n  let stats: any = [];\n  stats = useSelector((state: any) => state.dashboardStats?.drugslist);\n  useEffect(() => {\n    const loadDashboardStats = async () => {\n      await dispatch(dashboardActions.getAllDrugs());\n    };\n    loadDashboardStats();\n  }, [dispatch]);\n  console.log(stats);\n\n  return (\n    <>\n      <div className=\"contaniner-fluid\">\n        <div className=\"row\">\n          {/* <AdminSidebar staff={true} /> */}\n          <div className=\"dashboard_main_area pb-0 row\">\n            <Staff_Stats_cards />\n            <div className=\"col-md-11 expand12 pr0\">\n              <div className=\"row jcenter pt-9 mr0p\">\n                <div className=\"col-md-12 charthome\">\n                  <div className=\"col-md-12 charthome\">\n                    <div className=\"sidebarUpdate1 text-left\">\n                      <span>Drugs </span>\n                      <span>\n                        {\" \"}\n                        <input\n                          type=\"text\"\n                          className=\"search_on1 searchz form-control\"\n                          placeholder=\"search\"\n                        />\n                      </span>\n                      <span>\n                        <div className=\"row\">\n                          <select name=\"filter\" className=\"filter1\" id=\"\">\n                            <option value=\"\">Filter</option>\n                          </select>\n                          <Link to={`/admin/drugs/add`}>\n                            <button className=\"addstaff bluebtn\">\n                              + Add Drug\n                            </button>\n                          </Link>\n                        </div>\n                      </span>\n                    </div>\n                    <Table className=\"table\" responsive striped>\n                      <thead className=\"\">\n                        <tr>\n                          <th scope=\"col\">Drug Name</th>\n                          <th scope=\"col\">Description</th>\n                          <th scope=\"col\">Product ID</th>\n                          <th scope=\"col\">Number in package</th>\n                          <th scope=\"col\">Package type</th>\n                          <th scope=\"col\">Total Stocked</th>\n                          <th scope=\"col\">Total out of stocked</th>\n                          <th scope=\"col\"> Actions </th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {stats?.length > 0 &&\n                          stats?.map((item, i) => (\n                            <tr key={i}>\n                              <th scope=\"row\" className=\"thd\">\n                                <span className=\"slect3\">\n                                  <input\n                                    type=\"checkbox\"\n                                    name=\"selectstaff\"\n                                    id=\"\"\n                                  />\n                                </span>{\" \"}\n                                <td>{item?.drugName}</td>\n                              </th>\n                              <td>{item?.drugDescription}</td>\n                              \n                              <td>\n                                <span className=\"\">{item?.productId}</span>\n                                <span className=\"notif1\"></span>\n                              </td>\n                              <td>\n                                <span className=\"\">{item?.noInPackage}</span>\n                                <span className=\"notif1\"></span>\n                              </td>\n                              <td>\n                                <span className=\"\">\n                                  {item?.packageType}\n                                </span>\n                              </td>\n                              <td>\n                                <span className=\"\">\n                                  {item?.totalStocked}\n                                </span>\n                              </td>\n                              <td>\n                                <span className=\"\">\n                                  {item?.totalOutOfStock}\n                                </span>\n                              </td>\n                              <td>\n                                <TableDropdownDrug company_info={item} />\n                              </td>\n                            </tr>\n                          ))}\n                      </tbody>\n                    </Table>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\nexport default AdminDrugs;\n"],"sourceRoot":""}