{"version":3,"sources":["Components/views/Dashboard/AdminDashboard/Dropdown/TableDropdownDispatchDrug.tsx","Components/views/Dashboard/AdminDashboard/Admin_Drug_Dispatch.tsx"],"names":["TableDropdownDispatched","props","useState","show","setShow","remarks","errorMessage","quantityReturned","state","setState","handleClose","React","dropdownPopoverShow","setDropdownPopoverShow","btnDropdownRef","createRef","popoverDropdownRef","closeDropdownPopover","dispatch","useDispatch","console","log","returnDispatchedDrug","a","data","dashboardActions","returnDispatchedDrugs","company_info","id","onchange","e","target","name","value","useEffect","quantityStock","className","ref","onClick","preventDefault","createPopper","current","placement","width","height","viewBox","fill","xmlns","maskUnits","x","y","d","mask","Modal","onEnter","onHide","Header","closeButton","Title","Body","onChange","type","Footer","Button","variant","AdminDrugDispatch","stats","useSelector","dashboardStats","dispatched_drug_list","loadDashboardStats","getAllDispatchedDrugs","Staff_Stats_cards","placeholder","check_loggedInUser","to","Table","responsive","striped","scope","length","map","item","i","drugName","noInPackage","dispatchedStatus","quantity"],"mappings":"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","file":"static/js/37.7b2d02d9.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { createPopper } from \"@popperjs/core\";\nimport { dashboardActions } from \"../../../../../Actions\";\nimport { useDispatch } from \"react-redux\";\nimport { Button, Modal } from \"react-bootstrap\";\n\nconst TableDropdownDispatched = (props) => {\n  const [show, setShow] = useState(false);\n  const [show1, setShow1] = useState(false);\n  const [state, setState] = useState({\n    remarks: \"\",\n    errorMessage: \"\",\n    quantityReturned: \"\",\n  });\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const [dropdownPopoverShow, setDropdownPopoverShow]: any =\n    React.useState(false);\n  const btnDropdownRef: any = React.createRef();\n  const popoverDropdownRef: any = React.createRef();\n  const openDropdownPopover = () => {\n    createPopper(btnDropdownRef.current, popoverDropdownRef.current, {\n      placement: \"left-start\",\n    });\n    setDropdownPopoverShow(true);\n  };\n  const closeDropdownPopover = () => {\n    setDropdownPopoverShow(false);\n  };\n  const dispatch = useDispatch();\n  console.log(dropdownPopoverShow);\n  const returnDispatchedDrug = async () => {\n    const data = {\n      remarks,\n      quantityReturned,\n    };\n    await dispatch(\n      dashboardActions.returnDispatchedDrugs(data, props.company_info.id)\n    );\n  };\n  const onchange = (e) => {\n    setState({\n      ...state,\n      [e.target.name]: e.target.value,\n      errorMessage: \"\",\n    });\n  };\n  useEffect(() => {\n    setState({\n      ...state,\n      quantityReturned: props?.company_info?.quantityStock,\n    });\n  }, []);\n  const { remarks, quantityReturned } = state;\n  console.log(props.company_info);\n  return (\n    <>\n      <a\n        className=\"text-blueGray-500 py-1 px-3 colreverse\"\n        ref={btnDropdownRef}\n        onClick={(e) => {\n          e.preventDefault();\n          dropdownPopoverShow ? closeDropdownPopover() : openDropdownPopover();\n        }}\n      >\n        <svg\n          width=\"4\"\n          height=\"16\"\n          viewBox=\"0 0 4 16\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <mask\n            id=\"mask0_50_573\"\n            maskUnits=\"userSpaceOnUse\"\n            x=\"0\"\n            y=\"0\"\n            width=\"4\"\n            height=\"16\"\n          >\n            <path\n              fill-rule=\"evenodd\"\n              clip-rule=\"evenodd\"\n              d=\"M2 4C3.1 4 4 3.1 4 2C4 0.9 3.1 0 2 0C0.9 0 0 0.9 0 2C0 3.1 0.9 4 2 4ZM2 6C0.9 6 0 6.9 0 8C0 9.1 0.9 10 2 10C3.1 10 4 9.1 4 8C4 6.9 3.1 6 2 6ZM0 14C0 12.9 0.9 12 2 12C3.1 12 4 12.9 4 14C4 15.1 3.1 16 2 16C0.9 16 0 15.1 0 14Z\"\n              fill=\"white\"\n            />\n          </mask>\n          <g mask=\"url(#mask0_50_573)\">\n            <rect x=\"-10\" y=\"-4\" width=\"24\" height=\"24\" fill=\"#9EA0A5\" />\n          </g>\n        </svg>\n      </a>\n      {dropdownPopoverShow && (\n        <div className=\"reltv\">\n          <div\n            ref={popoverDropdownRef}\n            className={\n              (dropdownPopoverShow ? \"block \" : \"hidden \") +\n              \"bg-white text-base z-50 float-left py-2 list-none text-left rounded shadow-lg min-w-48 colreverse\"\n            }\n          >\n            {/* <span\n              className={\n                \"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\n              }\n            >\n              Edit\n            </span> */}\n            {/* {!props.company_info?.is_confirmed && (\n              <a\n                href=\"#pablo\"\n                className={\n                  \"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\n                }\n              >\n                Confirm\n              </a>\n            )} */}\n\n            {/* {props.company_info?.deleted_at && (\n              <a\n                href=\"#pablo\"\n                className={\n                  \"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\n                }\n              >\n                Restore\n              </a>\n            )} */}\n            {/* <a\n                href={`/admin/staffs/${props?.company_info?.id}/ORGANISATION`}\n                className={\n                  \"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\n                }\n              >\n                View Staffs\n              </a> */}\n            <span\n              className={\n                \"text-s12m text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\n              }\n              onClick={handleShow}\n            >\n              Return Drugs\n            </span>\n          </div>\n        </div>\n      )}\n      {/* Approval modal */}\n      <Modal show={show} onEnter={closeDropdownPopover} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Return Dispatched Drug</Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          <span className=\"rdfrmlbl\">\n            {\" \"}\n            Reason<span className=\"text-danger\">*</span>\n          </span>\n          <textarea\n            name=\"remarks\"\n            onChange={onchange}\n            className=\"form-control forminput\"\n          ></textarea>\n          <br />\n          <span className=\"rdfrmlbl\">\n            {\" \"}\n            Quantity<span className=\"text-danger\">*</span>\n          </span>\n          <input\n            type=\"number\"\n            value={quantityReturned}\n            name=\"quantityReturned\"\n            onChange={onchange}\n            className=\"form-control forminput\"\n          />\n          <br />\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={returnDispatchedDrug}>\n            Submit\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default TableDropdownDispatched;\n","import React, { useEffect } from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport Staff_Stats_cards from \"./DashboardComponents/Staff_Stats_cards\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"./index.css\";\nimport { dashboardActions } from \"../../../../Actions\";\nimport TableDropdownDispatched from \"./Dropdown/TableDropdownDispatchDrug\";\nimport { check_loggedInUser } from \"../../../Services/helper\";\n\nconst AdminDrugDispatch = () => {\n  const dispatch = useDispatch();\n  let stats: any = [];\n  stats = useSelector(\n    (state: any) => state.dashboardStats?.dispatched_drug_list\n  );\n  useEffect(() => {\n    const loadDashboardStats = async () => {\n      await dispatch(dashboardActions.getAllDispatchedDrugs());\n    };\n    loadDashboardStats();\n  }, [dispatch]);\n  console.log(stats);\n\n  return (\n    <>\n      <div className=\"contaniner-fluid\">\n        <div className=\"row\">\n          {/* <AdminSidebar staff={true} /> */}\n          <div className=\"dashboard_main_area pb-0 row\">\n            <Staff_Stats_cards />\n            <div className=\"col-md-11 expand12 pr0\">\n              <div className=\"row jcenter pt-9 mr0p\">\n                <div className=\"col-md-12 charthome\">\n                  <div className=\"col-md-12 charthome\">\n                    <div className=\"sidebarUpdate1 text-left\">\n                      <span>Dispatched Drugs </span>\n                      <span>\n                        {\" \"}\n                        <input\n                          type=\"text\"\n                          className=\"search_on1 searchz form-control\"\n                          placeholder=\"search\"\n                        />\n                      </span>\n                      <span>\n                        <div className=\"row\">\n                          <select name=\"filter\" className=\"filter1\" id=\"\">\n                            <option value=\"\">Filter</option>\n                          </select>\n                          {check_loggedInUser() == \"super_admin\" && (\n                            <Link to={`/admin/drug/dispatch/new`}>\n                              <button className=\"addstaff bluebtn\">\n                                + Dispatch Drugs\n                              </button>\n                            </Link>\n                          )}\n                        </div>\n                      </span>\n                    </div>\n                    <Table className=\"table\" responsive striped>\n                      <thead className=\"\">\n                        <tr>\n                          <th scope=\"col\">Drug Name</th>\n                          {/* <th scope=\"col\">Client Name</th> */}\n                          <th scope=\"col\">Number in package</th>\n                          <th scope=\"col\">Status</th>\n                          <th scope=\"col\">Quantity</th>\n                          <th scope=\"col\">Quantity Returned</th>\n                          <th scope=\"col\">Product Remarks</th>\n                          <th scope=\"col\"> Actions </th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {stats?.length > 0 &&\n                          stats?.map((item, i) => (\n                            <tr key={i}>\n                              <th scope=\"row\" className=\"thd\">\n                                <span className=\"slect3\">\n                                  <input\n                                    type=\"checkbox\"\n                                    name=\"selectstaff\"\n                                    id=\"\"\n                                  />\n                                </span>{\" \"}\n                                <td>{item?.drugName}</td>\n                              </th>\n                              {/* <td>{item?.clientName}</td> */}\n                              <td>\n                                <span className=\"\">{item?.noInPackage}</span>\n                                <span className=\"notif1\"></span>\n                              </td>\n                              <td>\n                                <span className=\"\">\n                                  {item?.dispatchedStatus}\n                                </span>\n                              </td>\n                              <td>\n                                <span className=\"\">{item?.quantity}</span>\n                              </td>\n                              <td>\n                                <span className=\"\">\n                                  {item?.quantityReturned}\n                                </span>\n                              </td>\n                              <td>\n                                <span className=\"\">{item?.remarks}</span>\n                                <span className=\"notif1\"></span>\n                              </td>\n                              <td>\n                                {check_loggedInUser() == \"client_admin\" && (\n                                  <TableDropdownDispatched\n                                    company_info={item}\n                                  />\n                                )}\n                              </td>\n                            </tr>\n                          ))}\n                      </tbody>\n                    </Table>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\nexport default AdminDrugDispatch;\n"],"sourceRoot":""}